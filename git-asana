#!/usr/bin/python

import json, os, sys, urllib2
from urllib import urlencode 

config_filename = '.git-asana-config'

try:
    asana_key = os.environ['ASANA_KEY']
except KeyError:
    print 'Asana key is not set!'
    quit(-1)

if len(sys.argv) > 2 and sys.argv[1] == 'set':
    os.environ['ASANA_TASK_ID'] = str(sys.argv[2])
    quit()

def asana_query(asana_key, path, data=None, method=None):
    if type(path) is not str:
        path = '/'.join(path)
    url = 'https://app.asana.com/api/1.0/' + path
    req = urllib2.Request(url, data)
    req.add_header('Authorization', 'Basic ' + (asana_key + ':').encode('base64').rstrip())
    if method is not None:
        req.get_method = lambda: method
    try:
        return json.loads(urllib2.urlopen(req).read())
    except urllib2.HTTPError as e:
        return {'error': str(e)}

def find_id_in_dict(d, name):
    return [v['id'] for v in d if v['name'] == name]

with open(config_filename, 'r') as content_file:
    cfg = json.loads(content_file.read())
if cfg is None:
    print 'There is no ' + config_filename +' file'
    quit(-1)

print '{workspace}, {project}'.format(**cfg)

modified_cfg = False 
if cfg.get('workspace_id', None) is None:
    workspaces = asana_query(asana_key, 'workspaces')
    workspace_id = find_id_in_dict(workspaces['data'], cfg['workspace'])
    if not workspace_id:
        print 'There is no such workspace'
        quit(-1);
    cfg['workspace_id'] = workspace_id[0]
    modified_cfg = True

if cfg.get('project', None) is not None and cfg.get('project_id', None) is None:
    projects = asana_query(asana_key, ['workspaces', str(cfg['workspace_id']), 'projects'])
    project_id = find_id_in_dict(projects['data'], cfg['project'])
    if not project_id:
        print 'There is no such project'
        quit(-1)
    cfg['project_id'] = project_id[0]
    modified_cfg = True

if modified_cfg:
    open(config_filename, 'w').write(json.dumps(cfg, indent=2))

if len(sys.argv) > 2 and sys.argv[1] == 'create':
    descr = ' '.join(sys.argv[3:])
    data = {
            'assignee':'me', 
            'name':sys.argv[2], 
            'notes':descr, 
            'workspace':cfg['workspace_id']
            }
    proj_id = cfg.get('project_id', None)
    if proj_id is not None:
        data['projects[0]'] = proj_id
    res = asana_query(asana_key, 'tasks', urlencode(data, True), method='POST')
    if 'error' not in res.keys():
        print 'Created task {0}'.format(res['data']['id'])
        quit()
    else:
        print 'Cannot create task, {0}'.format(res['error'])
        quit(-1)

tasks = asana_query(asana_key, 'projects/' + str(cfg['project_id']) + '/tasks?assignee=me')
for v in tasks['data']:
    sgn = ' '
    if str(v['id']) == str(os.environ['ASANA_TASK_ID']):
        sgn = '*'
    print sgn + '{id:16}: {name}'.format(**v)

