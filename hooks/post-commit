#!/usr/bin/python

import os, subprocess as sub, urllib, urllib2

comment_tpl = 'Git commit {hash}: {msg}'

def asana_query(asana_key, path, data, method='POST'):
    req = urllib2.Request('https://app.asana.com/api/1.0/' + '/'.join(path), urllib.urlencode(data))
    req.add_header('Authorization', 'Basic ' + (asana_key + ':').encode('base64').rstrip())
    req.get_method = lambda: method
    urllib2.urlopen(req)

def check_if_in(l, s):
    return not not [x for x in l if x in s.lower()]

task_id = os.environ['ASANA_TASK_ID']
asana_key = os.environ['ASANA_KEY']

commit = sub.check_output(['git', 'log',  '-1',  'HEAD',  '--pretty=oneline']).split(' ')
commit_id, comment = commit[0], ' '.join(commit[1:])
asana_query(asana_key, ['tasks', str(task_id), 'stories'], {'text': comment_tpl.format(hash=commit_id[:6], msg=comment)})
print 'Added comment to Asana'

if check_if_in(('[fixed]', '[closed]', '[completed]'), comment):
    asana_query(asana_key, ['tasks', str(task_id)], {'completed': 'true'}, method='PUT')
    print 'Marked task as completed'
elif check_if_in(('[break]', '[reopen]'), comment):
    asana_query(asana_key, ['tasks', str(task_id)], {'completed': 'false'}, method='PUT')
    print 'Marked task as uncompleted'

